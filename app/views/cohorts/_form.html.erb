<%= form_for(@cohort, html: { class: 'directUpload', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } }) do |f| %>
  <%= render 'shared/error_messages', object: f.object %>
  <div class="well">
    <div class="form-group">
      <%= f.label :date_description %>
      <%= f.text_field :date_description, class: 'form-control' %>
    </div>

    <div class="form-group">
      <%= f.label :start_at, "Registration opens" %>
      <%= f.text_field :start_at, data:{ provide:'datepicker' }, class: 'form-control' %>
    </div>

    <div class="form-group">
      <%= f.label :end_at, "Registration closes" %>
      <%= f.text_field :end_at, data:{ provide:'datepicker' }, class: 'form-control' %>
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <h3>Systems</h3>
      <div id="systems">
        <%= f.fields_for :systems do |system| %>
          <%= render 'system_fields', :f => system %>
        <% end %>
        <div class="links">
          <%= link_to_add_association 'Add System', f, :systems, class: 'btn btn-primary btn-block' %>
        </div>
      </div>
      <hr />
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <div class="btn-group-vertical btn-block">
        <%= f.submit yield(:button_text), class: 'btn btn-primary' %>
        <%= f.submit "Save and activate Tournament", class: "btn btn-primary", name: 'activate_cohort' %>
      </div>
    </div>
  </div>
<% end %>

<script>
    $(function () {
        $('.directUpload').find("input:file").each(function(i, elem) {
            var fileInput    = $(elem);
            var form         = $(fileInput.parents('form:first'));
            var submitButton = form.find('input[type="submit"]');
            var progressBar  = $("<div class='bar'></div>");
            var barContainer = $("<div class='progress'></div>").append(progressBar);
            fileInput.after(barContainer);
            fileInput.fileupload({
                fileInput:       fileInput,
                url:             form.data('url'),
                type:            'POST',
                autoUpload:       true,
                formData:         form.data('form-data'),
                paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
                dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
                replaceFileInput: false,
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    progressBar.css('width', progress + '%')
                },
                start: function (e) {
                    submitButton.prop('disabled', true);
                    progressBar.
                    css('background', 'green').
                    css('display', 'block').
                    css('width', '0%').
                    text("Loading...");
                },
                done: function(e, data) {
                    submitButton.prop('disabled', false);
                    progressBar.text("Uploading done");
                    // extract key and generate URL from response
                    var key   = $(data.jqXHR.responseXML).find("Key").text();
                    var url   = '//' + form.data('host') + '/' + key;
                    // create hidden field
                    $(elem).parent().find('.url-holder').val(url);
                },
                fail: function(e, data) {
                    submitButton.prop('disabled', false);
                    progressBar.
                    css("background", "red").
                    text("Failed");
                }
            });
        });
    });
</script>